server.port=9000
spring.application.name=auth-server

spring.datasource.url=jdbc:postgresql://localhost:5432/bookstore_auth_db
spring.datasource.username=postgres
spring.datasource.password=admin123
spring.datasource.driver-class-name=org.postgresql.Driver

# --- Authorization Server Configuration ---
spring.security.oauth2.authorization-server.issuer-uri=http://localhost:9000

# This is the client registration for the auth-server itself
spring.security.oauth2.client.registration.internal-client.provider=auth-server-provider
spring.security.oauth2.client.registration.internal-client.client-id=auth-server-client
spring.security.oauth2.client.registration.internal-client.client-secret=auth-server-secret
spring.security.oauth2.client.registration.internal-client.authorization-grant-type=client_credentials
spring.security.oauth2.client.registration.internal-client.scope=internal_api

# This is the provider configuration, pointing back to itself
spring.security.oauth2.client.provider.auth-server-provider.token-uri=http://localhost:9000/oauth2/token

eureka.client.service-url.defaultZone=http://localhost:8761/eureka
eureka.instance.hostname=localhost
spring.security.oauth2.client.registration.internal-client.registration-id=someid
user-service.base-url=http://localhost:8081